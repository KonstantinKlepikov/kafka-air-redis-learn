version: '3.8'

services:

  zookeeper-kaf:

    image: bitnami/zookeeper
    container_name: zookeeper-kaf
    env_file: .env
    ports:
      - "${ZK_PORT}:2181"
    # healthcheck:
    #   test: [ "CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok" ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    restart: always
    networks:
      - kafka-learn

  kafka-kaf:

    image: bitnami/kafka
    container_name: kafka-kaf
    depends_on:
      - zookeeper-kaf
    env_file: .env
    ports:
      - "${KAFKA_PORT}:9092"
    # healthcheck:
    #   test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka:9092" ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    restart: always
    networks:
      - kafka-learn

  kafka-ui-kaf:

    container_name: kafka-ui-kaf
    image: provectuslabs/kafka-ui:latest
    env_file: .env
    depends_on:
      - kafka-kaf
    ports:
      - "${KAFKA_UI_PORT}:8080"
    volumes:
      - ./kaf/config.yml:/etc/kafkaui/dynamic_config.yaml

  api-kaf:
    image: api-kaf
    container_name: api-kaf
    ports:
      - "8392:8000"
    env_file: .env
    depends_on:
      - kafka-kaf
    build:
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
      context: ./api-kaf
      dockerfile: dockerfile
    volumes:
      - ./api-kaf/app:/app
    networks:
      - kafka-learn

  proc-kaf1:
    image: proc-kaf1
    container_name: proc-kaf1
    env_file: .env
    depends_on:
      - kafka-kaf
    build:
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
      context: ./proc-kaf1
      dockerfile: dockerfile
    volumes:
      - ./proc-kaf1/app:/app
    networks:
      - kafka-learn

  proc-kaf2:
    image: proc-kaf2
    container_name: proc-kaf2
    env_file: .env
    depends_on:
      - kafka-kaf
    build:
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
      context: ./proc-kaf2
      dockerfile: dockerfile
    volumes:
      - ./proc-kaf2/app:/app
    networks:
      - kafka-learn

  proc-kaf3:
    image: proc-kaf3
    container_name: proc-kaf3
    env_file: .env
    depends_on:
      - kafka-kaf
    build:
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
      context: ./proc-kaf3
      dockerfile: dockerfile
    volumes:
      - ./proc-kaf3/app:/app
    networks:
      - kafka-learn

  proc-kaf4:
    image: proc-kaf4
    container_name: proc-kaf4
    env_file: .env
    depends_on:
      - kafka-kaf
    build:
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
      context: ./proc-kaf1
      dockerfile: dockerfile
    volumes:
      - ./proc-kaf1/app:/app
    networks:
      - kafka-learn

networks:
  kafka-learn:
